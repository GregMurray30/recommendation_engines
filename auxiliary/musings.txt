Brainstorming of ideas for improving this model:

Shortcomings:
-Two people with a shared "enemy" are currently considered, mathematically, more dissimilar than their enemy.This may be the 
case but it could also be the opposite.
-One major problem is that sample size is not being incorporated -SOLVED 
-What do you do with 0 variance node pairs?? -WORKING SOLUTION

Solution Ideas:

-To address sample size uncertainty you could use a Bayesian approach where the likelihood was the distribution mentioned above.
For the prior you could pick the overall mean, or somehow determine clusters with homogeneity scores to determine a prior distribution estimate.

-Node Centrality should be penalized where the more popular a movie the less that similarity counts ("Blockbuster Effect"). The reality check on this is that nearly everyone liked Jurassic Park, Avatar, etc. (fill in the blockbuster blank), but that does not mean we all have similar tastes. Finding the correct function of centrality to assign to the similarity algorithm (s(c)) is the hard part. 

-Incorporate a time series to avoid the assumption that tastes don't change over time

RESOURCES
-Pazzani (1999b) hybrid system using demographics where ratings data is shallow
-"Huang et al. (2004) view the recommendation problem as a graph analysis problem"
-"Huang et al. (2004) propose transforming the rating matrix into a bipartite graph of users and items. Then, a specific graph-exploring approach called spreading activation is used to analyze the graph in an efficient manner."
-"Still, the computation of distant relationships remains computationally expensive; it has not yet been shown how the approach can be applied to large ratings databases."
-Wang et al. (2006). 'they suggest combining the two different similarity types to improve the prediction accuracy. In addition, a third type of information (“similar item ratings made by similar users”)'
-'Roughly speaking, matrix factorization methods can be used in recommender systems to derive a set of latent (hidden) factors from the rating patterns and characterize both users and items by such vectors of factors. In the movie domain, such automatically identified factors can correspond to obvious aspects of a movie such as the genre or the type (drama or action), but they can also be uninterpretable. A recommendation for an item i is made when the active user and the item i are similar with respect to these factors (Koren et al. 2009).'
-'The idea of exploiting latent relationships in the data and using matrix factorization techniques such as SVD or principal component analysis was relatively soon transferred to the domain of recommender systems (Sarwar et al. 2000b; Goldberg et al. 2001; Canny 2002b).'
